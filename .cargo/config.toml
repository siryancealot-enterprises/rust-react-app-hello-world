# Base configuration file. Includes environment variables in the [env] section and aliased Cargo commands in the [alias] section. 
# 
# See https://doc.rust-lang.org/cargo/reference/config.html for more info on how this conifugration file can be used.

[env]

# Any other [8]-config.toml file can be specified when running a Cargo command (see example below) and its name=val pairs will 
# override anything within this [env] section at runtime.
# 
# Example: cargo --env-file .cargo/test-config.toml test

# db
database_user = "postgres"
database_password = "lakers"
database_host = "localhost:5432"
database_name = "project_x_db"
# TODO SWY: Need to turn the below into using substitution vars like this: "postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}/${DATBASE_NAME}"
DATABASE_URL= "postgresql://postgres:lakers@localhost:5432/project_x_db" # Needs to be all caps because that's what the SQLX library expects
database_max_connections= "5"
database_connection_aquire_timeout= "3" # In seconds
SQLX_OFFLINE = "true" # Needs to be all caps because that's what the SQLX library expects

# app server
app_server_url = "127.0.0.1:3000"
app_server_graceful_shutdown_max_duration= "10" # In seconds

# React / Typescript SPA
spa_dist_dir = "my-react-ts-app/build"
spa_fallback_url = "my-react-ts-app/build/index.html"

# search
search_port = "7700"
search_server_url= "http://localhost:7700"
search_master_key = "master-key"
player_search_index = "players"


[alias] 
# Cargo aliases: allows you to define a Cargo command with specified command line paramters 

init_repo = "run --bin init_dev_repo" # init a new repo (i.e. creates and seeds DB schema, search idexes, etc.) 

test_with_config = "--config .cargo/test-config.toml test" # run all tests with the test-specific config

docker_tear_down = "run --bin docker_utils -- tear_down" # Tears down the Docker services defined in composer.yaml
docker_stop = "run --bin docker_utils -- stop" # Shuts down the Docker services defined in composer.yaml
docker_up = "run --bin docker_utils -- up" # Starts or creates the Docker services defined in composer.yaml

copy_configs_for_debugger = "run --bin copy_configs_for_debugger" # Copies our .cargo/config.toml to the target/debug directory in a format our debugger can use.